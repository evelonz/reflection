When would you want to use a remote repository rather than keeping all your work
local?

    When I want to colaborate with people or when I'm working from many different
    machines and locations. 

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Someone else may have pushed changes to GitHub that I do not want in my current
    working version/branch.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forkes makes a clone on GitHub, keeping a references to the forked repository.
        Forkes are good when you want to work on someone elses repository but don't
        have permissions. Or if you want to use their code and take it in your own direction.
    Clone makes a copy of a repository, not keeping any references.
        This is good when you're not on GitHub. Maybe you want to clone someones
        repository that is on a network share.
        It is also good if you have for instance a template for new projects.
    Branche makes a new commit chain on an existing branch in a repository.
        These are good if you are implementing new features or fixing a large bug.
    
What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can se if you are behind or ahead of the remote branch.
    If you are behind you can do a merge and it is easier to work with the local files.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Using my own server to host the repository.
    It would be harder though since I would not have the graphical interface for free.
    Not sure if git in it self has merge request abilities?
    It would be harder to have multiple people find, share and work on it.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
